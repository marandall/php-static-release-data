<?xml version="1.0"?>
<release version="5.4.44">
  <version>5.4.44</version>
  <date>2015-08-06</date>
  <sources>
    <source>
      <name>PHP 5.4.44 (tar.bz2)</name>
      <filename>php-5.4.44.tar.bz2</filename>
      <date>2015-08-06</date>
      <sha256>8dd59e5ce9248cf36ac3de5412a518b8b24c01ace6c46ce3d12e4ce981a3856d</sha256>
    </source>
    <source>
      <name>PHP 5.4.44 (tar.gz)</name>
      <filename>php-5.4.44.tar.gz</filename>
      <date>2015-08-06</date>
      <sha256>1799998e48da3d8f34722840628e18789e26ea21741d4e498ade6749b3266602</sha256>
    </source>
    <source>
      <name>Windows 5.4.44 binaries and source</name>
      <filename/>
      <date>2020-01-07</date>
      <md5/>
    </source>
  </sources>
  <announcements>
    <announcement lang="en">Please note that PHP 5.4 branch is nearing the end of its [support timeframe](http://php.net/supported-versions.php). Either September or October release, depending on discovered issues, will be the last official release of PHP 5.4. If your PHP installation is based on PHP 5.4, it may be a good time to start making the plans for the upgrade.</announcement>
  </announcements>
  <changes>
    <modules>
      <module id="core">
        <change>
          <description>(Remotely triggerable stack exhaustion via recursive method calls).</description>
          <references>
            <reference type="bugfix">69793</reference>
          </references>
        </change>
        <change>
          <description>(Different arrays compare indentical due to integer key truncation).</description>
          <references>
            <reference type="bugfix">69892</reference>
          </references>
        </change>
        <change>
          <description>(unserialize() could lead to unexpected methods execution / NULL pointer deref).</description>
          <references>
            <reference type="bugfix">70121</reference>
          </references>
        </change>
      </module>
      <module id="openssl">
        <change>
          <description>(openssl_random_pseudo_bytes() is not cryptographically secure). (CVE-2015-8867)</description>
          <references>
            <reference type="bugfix">70014</reference>
            <reference type="cve">CVE-2015-8867</reference>
          </references>
        </change>
      </module>
      <module id="phar">
        <change>
          <description>Improved fix for bug [#69441](http://bugs.php.net/69441).</description>
          <references/>
        </change>
        <change>
          <description>(Files extracted from archive may be placed outside of destination directory). (CVE-2015-6833)</description>
          <references>
            <reference type="bugfix">70019</reference>
            <reference type="cve">CVE-2015-6833</reference>
          </references>
        </change>
      </module>
      <module id="soap">
        <change>
          <description>(SoapClient info leak / null pointer dereference via multiple type confusions).</description>
          <references>
            <reference type="bugfix">70081</reference>
          </references>
        </change>
      </module>
      <module id="spl">
        <change>
          <description>(Dangling pointer in the unserialization of ArrayObject items). (CVE-2015-6832)</description>
          <references>
            <reference type="bugfix">70068</reference>
            <reference type="cve">CVE-2015-6832</reference>
          </references>
        </change>
        <change>
          <description>(Use After Free Vulnerability in unserialize() with SPLArrayObject). (CVE-2015-6831)</description>
          <references>
            <reference type="bugfix">70166</reference>
            <reference type="cve">CVE-2015-6831</reference>
          </references>
        </change>
        <change>
          <description>(Use After Free Vulnerability in unserialize() with SplObjectStorage). (CVE-2015-6831)</description>
          <references>
            <reference type="bugfix">70168</reference>
            <reference type="cve">CVE-2015-6831</reference>
          </references>
        </change>
        <change>
          <description>(Use After Free Vulnerability in unserialize() with SplDoublyLinkedList). (CVE-2015-6831)</description>
          <references>
            <reference type="bugfix">70169</reference>
            <reference type="cve">CVE-2015-6831</reference>
          </references>
        </change>
      </module>
    </modules>
  </changes>
  <tags/>
</release>
